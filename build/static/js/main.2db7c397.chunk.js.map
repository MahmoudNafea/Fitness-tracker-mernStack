{"version":3,"sources":["components/navbar.js","components/exercise.js","components/exercisesLists.js","components/editExercise.js","components/createExercise.js","components/createUser.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Exercise","props","exercise","name","description","duration","date","substring","process","BASE_URL","_id","onClick","deleteExercise","require","config","ExerciseLists","state","exercises","bind","axios","get","then","res","setState","data","catch","error","console","log","id","delete","this","prevState","filter","el","map","currentExercise","key","exerciseList","Component","EditExercise","Date","users","onChangeName","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","match","params","response","length","user","e","target","value","preventDefault","post","window","location","ref","required","onChange","type","selected","CreateExercise","CreateUser","username","onChangeUsername","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2db7c397.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n            <Link to=\"/\" className=\"navbar-brand\">ExerciseTracker</Link>\r\n            <div className=\"collpase navbar-collapse\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">Exercises</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Exercise = (props) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.exercise.name}</td>\r\n            <td>{props.exercise.description}</td>\r\n            <td>{props.exercise.duration}</td>\r\n            <td>{props.exercise.date.substring(0, 10)}</td>\r\n            <td>\r\n                <Link to={`${process.env.BASE_URL}edit/` + props.exercise._id}>Edit</Link> |\r\n                    <button onClick={() => { props.deleteExercise(props.exercise._id) }}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Exercise","import React, { Component } from 'react';\r\nimport Exercise from './exercise';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nrequire('dotenv').config();\r\n\r\nclass ExerciseLists extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.deleteExercise = this.deleteExercise.bind(this)\r\n    }\r\n    state = { exercises: [] }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${process.env.BASE_URL}exercise`)\r\n            .then((res) => {\r\n                this.setState({ exercises: res.data })\r\n            }).catch(error => console.log(error))\r\n    }\r\n\r\n    deleteExercise(id) {\r\n        axios.delete(`${process.env.BASE_URL}` + id)\r\n            .then((res) => console.log(res.data))\r\n        this.setState((prevState) => {\r\n            return ({ exercises: prevState.exercises.filter(el => el._id !== id) })\r\n        })\r\n    }\r\n    exerciseList() {\r\n        return this.state.exercises.map(currentExercise => {\r\n            return <Exercise exercise={currentExercise}\r\n                deleteExercise={this.deleteExercise} key={currentExercise._id} />;\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Logged Exercises</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Description</th>\r\n                            <th>Duration</th>\r\n                            <th>Date</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.exerciseList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExerciseLists;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nrequire('dotenv').config()\r\nclass EditExercise extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        duration: 0,\r\n        date: new Date(),\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${process.env.BASE_URL}exercise/` + this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    name: response.data.name,\r\n                    description: response.data.description,\r\n                    duration: response.data.duration,\r\n                    date: new Date(response.data.date)\r\n                })\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log('error' + error);\r\n            })\r\n\r\n        axios.get(`${process.env.BASE_URL}users/`)\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data.map(user => user.name),\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDuration(e) {\r\n        this.setState({\r\n            duration: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const exercise = {\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n\r\n        console.log(exercise);\r\n\r\n        axios.post(`${process.env.BASE_URL}update/` + this.props.match.params.id, exercise)\r\n            .then(res => console.log(res.data));\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Edit Exercise </h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <select ref=\"userInput\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.name}\r\n                            onChange={this.onChangeName}>\r\n                            {\r\n                                this.state.users.map((user) => {\r\n                                    return <option\r\n                                        key={user}\r\n                                        value={user}>{user}\r\n                                    </option>;\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChangeDescription}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes): </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChangeDuration}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date: </label>\r\n                        <div>\r\n                            <DatePicker\r\n                                selected={this.state.date}\r\n                                onChange={this.onChangeDate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditExercise","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nrequire('dotenv').config();\r\n\r\nclass CreateExercise extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onChangeName = this.onChangeName.bind(this)\r\n        this.onChangeDescription = this.onChangeDescription.bind(this)\r\n        this.onChangeDuration = this.onChangeDuration.bind(this)\r\n        this.onChangeDate = this.onChangeDate.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        duration: '',\r\n        date: new Date(),\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`${process.env.BASE_URL}users`)\r\n            .then((res) => {\r\n                if (res.data.length > 0) {\r\n                    this.setState({\r\n                        users: res.data.map((user) => user.name),\r\n                        name: res.data[0].name\r\n                    })\r\n                }\r\n            }).catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n    onChangeName(e) {\r\n        this.setState({ name: e.target.value })\r\n    }\r\n    onChangeDescription(e) {\r\n        this.setState({ description: e.target.value })\r\n    }\r\n    onChangeDuration(e) {\r\n        this.setState({ duration: e.target.value })\r\n    }\r\n    onChangeDate(date) {\r\n        this.setState({ date: date })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const exercise = {\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n        console.log(exercise)\r\n        axios.post(`${process.env.BASE_URL}exercise/add`, exercise)\r\n            .then(res => console.log(res.data))\r\n        window.location = `${process.env.BASE_URL}`\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create New Exercise</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <select ref=\"userInput\" required className=\"form-control\"\r\n                            value={this.state.name} onChange={this.onChangeName}>\r\n                            {this.state.users.map((user) => {\r\n                                return (<option key={user} value={user}> {user}</option>)\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\" required className=\"form-control\"\r\n                            value={this.state.description} onChange={this.onChangeDescription} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes)</label>\r\n                        <input type=\"number\" required className=\"form-control\"\r\n                            value={this.state.duration} onChange={this.onChangeDuration} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date</label>\r\n                        <div>\r\n                            <DatePicker selected={this.state.date} onChange={this.onChangeDate} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Exercise\" className=\"btn btn-primary\" />\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateExercise;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nrequire('dotenv').config();\r\n\r\n\r\nclass CreateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onChangeUsername = this.onChangeUsername.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    state = { username: '' }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: this.state.username\r\n        }\r\n        console.log(user)\r\n        axios.post(`${process.env.BASE_URL}users/add`, user)\r\n            .then(res => console.log(res.data))\r\n        this.setState({ username: '' })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" required className=\"form-control\"\r\n                            value={this.state.username} onChange={this.onChangeUsername} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Create User</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateUser;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from './components/navbar'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport ExerciseLists from './components/exercisesLists';\r\nimport EditExercise from './components/editExercise';\r\nimport CreateExercise from './components/createExercise';\r\nimport CreateUser from './components/createUser';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <Navbar />\r\n        <Route path=\"/\" exact component={ExerciseLists} />\r\n        <Route path=\"/edit/:id\" component={EditExercise} />\r\n        <Route path=\"/create\" component={CreateExercise} />\r\n        <Route path=\"/user\" component={CreateUser} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}